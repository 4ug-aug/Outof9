#! /usr/bin/env python
# a program to determine which words can be assembled from 9 letters
# by 4ug-aug

import random, time
from nltk.corpus import words

word_list = words.words()
let9 = []
words9 = []
lengthWords = []
length_of_word = 0

def main():
    def randomize():
        letters = ['a','b','c','d','e','f','g','h','i','j','k','l','m','o','p','q','r','s','t','u','v','x','y','z']
        for i in range(9):
            let9.append(random.choice(letters))

    def chose_letters():
        for i in range(9):
            input_letter = input('Which letters should be used: ')
            let9.append(input_letter)
        let9.sort()


    # Small UI
    def UI():
        global length_of_word
        try:
            length_of_word = int(input('How long should the word be exacly: '))
            choice = input('Random letters(1) or chose your own?(2): ')
            if choice == '2':
                chose_letters()
            elif choice == '1':
                randomize
        except ValueError:
            print('Invalid Input')
            UI()
    UI()
    print(let9)

    # sort the list to only words of your desired length
    for i in word_list:
        if len(i) == length_of_word:
            lengthWords.append(i)
    lengthWords.sort()

    # check each letter and add a white space after each word
    def checklet(x):
        print('Starting Search...')
        for word in x:
            length = 0
            for letter in word:
                length += 1
                if letter in let9:              # if the letter is in the word it is appended to a new list, words9
                    words9.append(letter)
                else:
                    continue
                if length == len(word):         # when the variable "length" is as long as the current word, append
                    words9.append(' ')          # a white space. Useful later
        join_n_check(words9)

    # join the "words" to a string and split them again to get a list of the words divided by a white space
    def join_n_check(y):
        y = ''.join(y)
        y = y.split()
        for i in y:                             # loop over every word in the new list
            if i in lengthWords:                # if it is in the list of length-conditioned words print it
                if len(i) == length_of_word:
                    print(i)
                else:
                    continue
            else:
                continue

    start_time = time.time()
    checklet(lengthWords)
main()
print('Done searching...')
print("Time elapsed: %ss" % (time.time() - start_time))
